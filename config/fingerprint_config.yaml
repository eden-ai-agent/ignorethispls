# ================================================================================
# REVOLUTIONARY O(1) FINGERPRINT SYSTEM - FINGERPRINT PROCESSING CONFIGURATION
# ================================================================================
# This configuration file defines all fingerprint processing parameters for the
# revolutionary O(1) fingerprint matching system. Optimized for biological
# feature extraction and O(1) address generation.
#
# Patent Pending - Constant-Time Database Search Technology
# ================================================================================

# Primary fingerprint processing configuration
fingerprint_processing:
  # Processing optimization modes
  optimization_mode: "${FINGERPRINT_MODE:balanced}"  # speed, accuracy, balanced
  
  # Core processing settings
  core:
    target_extraction_time_ms: 25.0     # Target total extraction time
    target_classification_time_ms: 15.0 # Target pattern classification time
    target_addressing_time_ms: 5.0      # Target address generation time
    quality_threshold: 60.0             # Minimum acceptable image quality
    confidence_threshold: 0.75          # Minimum extraction confidence
    
  # Address space configuration
  address_space:
    size: "${ADDRESS_SPACE_SIZE:1000000000000}"  # 1 trillion addresses
    config_type: "LARGE_ENTERPRISE"     # SMALL_ENTERPRISE, LARGE_ENTERPRISE, MASSIVE_SCALE
    region_count: 1000000               # Number of address regions
    max_region_density: 0.8             # Maximum region occupancy
    
  # Biological feature stability
  feature_stability:
    # Pattern classification (most stable)
    pattern_weight: 0.35
    core_position_weight: 0.25
    ridge_flow_weight: 0.20
    
    # Measurements (moderately stable)
    ridge_count_weight: 0.10
    minutiae_weight: 0.05
    orientation_weight: 0.05

# Image preprocessing configuration
image_preprocessing:
  # Standard image normalization
  normalization:
    target_size: [512, 512]             # Standard processing size
    interpolation: "INTER_CUBIC"        # INTER_LINEAR, INTER_CUBIC, INTER_LANCZOS4
    preserve_aspect_ratio: false        # Stretch to fit or maintain ratio
    
  # Image enhancement
  enhancement:
    histogram_equalization: true        # Improve contrast
    gaussian_blur:
      enabled: true
      kernel_size: [3, 3]
      sigma: 0.5
      
    noise_reduction:
      enabled: true
      method: "bilateral"               # bilateral, gaussian, median
      d: 9
      sigma_color: 75
      sigma_space: 75
      
    sharpening:
      enabled: false                    # Careful - can introduce artifacts
      kernel_strength: 0.5
      
  # Quality assessment
  quality_assessment:
    enabled: true
    min_contrast: 20.0                  # Minimum acceptable contrast
    max_saturation: 0.95                # Maximum pixel saturation
    min_clarity_score: 0.3              # Minimum edge sharpness
    uniformity_threshold: 0.2           # Maximum uniformity (avoid blank areas)

# Pattern classification configuration
pattern_classification:
  # Core classification algorithm
  algorithm:
    method: "poincare_index"            # Scientific fingerprint pattern classification
    confidence_method: "multi_validation" # single, multi_validation, ensemble
    
  # Poincaré Index parameters
  poincare:
    block_size: 16                      # Analysis block size (pixels)
    smoothing_sigma: 2.0                # Gaussian smoothing strength
    threshold: 0.3                      # Classification threshold
    core_search_radius: 50              # Pixels to search for core
    delta_search_radius: 100            # Pixels to search for delta points
    
  # Performance optimization
  optimization:
    target_time_ms: 15.0                # Target classification time
    gpu_acceleration: "${GPU_ACCEL:false}"
    parallel_processing: true
    cache_orientation_fields: true
    
  # Pattern types and encoding
  patterns:
    supported_types:
      - "ARCH_PLAIN"
      - "ARCH_TENTED"
      - "LOOP_LEFT"
      - "LOOP_RIGHT"
      - "WHORL_PLAIN"
      - "WHORL_CENTRAL_POCKET"
      - "WHORL_DOUBLE"
      - "WHORL_ACCIDENTAL"
      
    # Pattern encoding for addressing
    encoding:
      ARCH_PLAIN: 1
      ARCH_TENTED: 2
      LOOP_LEFT: 3
      LOOP_RIGHT: 4
      WHORL_PLAIN: 5
      WHORL_CENTRAL_POCKET: 6
      WHORL_DOUBLE: 7
      WHORL_ACCIDENTAL: 8
      UNKNOWN: 0
      
  # Quality validation
  validation:
    min_confidence_score: 0.7
    require_core_detection: true
    require_orientation_field: true
    validate_pattern_consistency: true

# Ridge analysis configuration
ridge_analysis:
  # Ridge counting parameters
  counting:
    # Vertical ridge counting
    vertical:
      scan_lines: 5                     # Number of scan lines
      line_spacing: 50                  # Pixels between scan lines
      smoothing_window: 7               # Smoothing window size
      peak_detection_threshold: 0.3     # Ridge peak threshold
      
    # Horizontal ridge counting  
    horizontal:
      scan_lines: 5
      line_spacing: 50
      smoothing_window: 7
      peak_detection_threshold: 0.3
      
    # Quantization for addressing
    quantization:
      ridge_count_bucket_size: 5        # Group ridges into buckets of 5
      max_ridge_count: 200              # Maximum expected ridge count
      
  # Ridge density analysis
  density:
    analysis_window_size: 32            # Pixel window for density calculation
    overlap_percentage: 0.5             # Window overlap
    density_normalization: "local"      # local, global, adaptive
    
    # Density encoding for addressing
    encoding:
      high_threshold: 18.0              # Ridges per window for "high"
      medium_threshold: 12.0            # Ridges per window for "medium"
      # Below medium is "low"
      
  # Ridge flow analysis
  flow_analysis:
    gradient_method: "sobel"            # sobel, scharr, roberts
    orientation_smoothing: true
    smoothing_iterations: 3
    
    # Flow direction encoding
    direction_encoding:
      num_directions: 8                 # 8 primary directions (45° increments)
      direction_names:
        - "NORTH"
        - "NORTHEAST" 
        - "EAST"
        - "SOUTHEAST"
        - "SOUTH"
        - "SOUTHWEST"
        - "WEST"
        - "NORTHWEST"

# Minutiae detection configuration
minutiae_detection:
  # Detection algorithm
  algorithm:
    method: "crossing_number"           # crossing_number, neural_network, hybrid
    neighborhood_size: 3                # Pixel neighborhood for analysis
    
  # Detection parameters
  detection:
    # Ridge ending detection
    ridge_endings:
      enabled: true
      threshold: 1                      # Crossing number for endings
      min_ridge_length: 10              # Minimum ridge length (pixels)
      
    # Ridge bifurcation detection
    bifurcations:
      enabled: true
      threshold: 3                      # Crossing number for bifurcations
      min_branch_length: 8              # Minimum branch length (pixels)
      
    # Quality filtering
    quality_filtering:
      enabled: true
      min_quality_score: 0.6            # Minimum minutiae quality
      remove_border_minutiae: true      # Remove minutiae near image borders
      border_distance: 20               # Pixels from border to ignore
      
  # Minutiae validation
  validation:
    remove_duplicates: true
    duplicate_distance_threshold: 10    # Pixels - minutiae closer are duplicates
    validate_orientation: true
    orientation_consistency_threshold: 30 # Degrees
    
  # Quantization for addressing
  quantization:
    count_bucket_size: 10               # Group minutiae counts by 10s
    max_minutiae_count: 200             # Maximum expected minutiae
    spatial_quantization: 8             # 8x8 spatial grid for position encoding

# Core and delta detection
core_delta_detection:
  # Core point detection
  core_detection:
    enabled: true
    search_method: "poincare_index"     # poincare_index, complex_filtering
    search_radius: 80                   # Pixels from image center
    confidence_threshold: 0.7
    
    # Core position encoding for addressing
    position_encoding:
      grid_size: [8, 8]                 # 8x8 grid for position quantization
      position_names:
        - "CENTER"
        - "UPPER_LEFT"
        - "UPPER_CENTER"
        - "UPPER_RIGHT"
        - "CENTER_LEFT"
        - "CENTER_RIGHT"
        - "LOWER_LEFT"
        - "LOWER_CENTER"
        - "LOWER_RIGHT"
        
  # Delta point detection
  delta_detection:
    enabled: true
    search_method: "poincare_index"
    search_radius: 120                  # Larger search radius for deltas
    max_deltas: 3                       # Maximum expected delta points
    confidence_threshold: 0.6

# Orientation field analysis
orientation_analysis:
  # Field calculation
  calculation:
    block_size: 16                      # Block size for orientation calculation
    overlap_factor: 0.5                 # Block overlap factor
    smoothing_enabled: true
    smoothing_iterations: 3
    
  # Gradient calculation
  gradient:
    method: "sobel"                     # sobel, scharr, roberts, prewitt
    normalization: "l2"                 # l1, l2, max
    
  # Orientation encoding
  encoding:
    quantization_degrees: 15            # Quantize orientations to 15° buckets
    primary_orientations: 12            # 12 primary orientations (30° each)
    
    # Orientation stability analysis
    stability:
      consistency_window: 5             # Blocks to check for consistency
      consistency_threshold: 30         # Degrees for consistency
      weight_consistent_regions: 1.5    # Higher weight for stable regions

# Quality assessment configuration
quality_assessment:
  # Overall quality metrics
  overall:
    # Contrast assessment
    contrast:
      weight: 0.4
      min_acceptable: 20.0
      target_range: [40.0, 120.0]
      
    # Clarity assessment  
    clarity:
      weight: 0.4
      method: "laplacian_variance"      # laplacian_variance, gradient_magnitude
      min_acceptable: 0.3
      target_range: [0.5, 2.0]
      
    # Uniformity assessment
    uniformity:
      weight: 0.2
      method: "local_standard_deviation"
      max_acceptable: 0.8               # Lower is more uniform
      
  # Regional quality assessment
  regional:
    enabled: true
    grid_size: [4, 4]                   # 4x4 grid for regional analysis
    min_acceptable_regions: 12          # Minimum good regions out of 16
    quality_interpolation: true         # Interpolate between regions
    
  # Quality-based processing adjustments
  adaptive_processing:
    enabled: true
    
    # Low quality adjustments
    low_quality_adjustments:
      threshold: 40.0
      extra_smoothing: true
      conservative_thresholds: true
      reduced_minutiae_sensitivity: true
      
    # High quality optimizations
    high_quality_optimizations:
      threshold: 80.0
      fine_detail_extraction: true
      precise_measurements: true
      enhanced_minutiae_detection: true

# Characteristic extraction optimization
characteristic_extraction:
  # Extraction modes (matches optimization_mode)
  modes:
    speed:
      target_time_ms: 20.0
      reduced_analysis: true
      fast_algorithms: true
      minimal_validation: true
      cache_aggressively: true
      
    accuracy:
      target_time_ms: 50.0
      enhanced_analysis: true
      multiple_validations: true
      comprehensive_checks: true
      conservative_thresholds: true
      
    balanced:
      target_time_ms: 25.0
      standard_analysis: true
      basic_validation: true
      moderate_caching: true
      
  # Normalization for addressing consistency
  normalization:
    # Biological feature normalization
    biological_features:
      pattern_class_required: true
      core_position_required: true
      ridge_flow_required: true
      
    # Measurement normalization
    measurements:
      ridge_count_quantization: 5       # Group by 5s
      minutiae_quantization: 10         # Group by 10s
      orientation_quantization: 15      # 15-degree buckets
      
    # Quality normalization
    quality_metrics:
      quality_score_buckets: 10         # 10-point quality buckets
      density_buckets: 5                # 5-level density classification
      contrast_buckets: 8               # 8-level contrast classification
      
  # Tolerance settings for impression variations
  tolerance:
    # Inter-impression tolerance (same finger, different impressions)
    intra_finger:
      ridge_count_tolerance: 3          # ±3 ridges acceptable
      minutiae_count_tolerance: 5       # ±5 minutiae acceptable
      orientation_tolerance: 15         # ±15 degrees acceptable
      quality_tolerance: 10             # ±10 quality points acceptable
      
    # Inter-finger separation (different fingers must be clearly separated)
    inter_finger:
      pattern_separation_required: true
      minimum_ridge_difference: 8       # Minimum ridge count difference
      minimum_minutiae_difference: 15   # Minimum minutiae difference
      orientation_separation: 30        # Minimum orientation difference

# Address generation configuration
address_generation:
  # Primary address generation
  primary_address:
    algorithm: "biological_hash"        # Stable hash based on biology
    components:
      pattern_component:
        bits: 8
        weight: 0.35
      structure_component:
        bits: 8  
        weight: 0.25
      measurement_component:
        bits: 10
        weight: 0.20
      quality_component:
        bits: 8
        weight: 0.15
      discriminator_component:
        bits: 16
        weight: 0.05
        
  # Similarity address generation
  similarity_addresses:
    enabled: true
    max_addresses: 50                   # Maximum similarity addresses per fingerprint
    generation_strategy: "tolerance_based"
    
    # Tolerance-based generation
    tolerance_levels:
      strict: 0.05                      # 5% tolerance
      moderate: 0.10                    # 10% tolerance  
      loose: 0.20                       # 20% tolerance
      
    # Address validation
    validation:
      uniqueness_check: true
      collision_detection: true
      distribution_analysis: true
      
  # Address encoding
  encoding:
    format: "hierarchical"              # hierarchical, flat, hybrid
    separator: "."
    prefix: "FP"
    checksum_enabled: true
    compression_enabled: false

# Performance monitoring
performance_monitoring:
  # Processing time tracking
  timing:
    enabled: true
    precision: "microsecond"            # microsecond, millisecond
    track_component_times: true
    generate_timing_reports: true
    
  # Benchmarking
  benchmarking:
    enabled: "${PERFORMANCE_BENCH:false}"
    test_image_sets:
      - "data/test_images/quality_high/"
      - "data/test_images/quality_medium/"
      - "data/test_images/quality_low/"
    iterations_per_test: 100
    statistical_analysis: true
    
  # Performance targets
  targets:
    total_processing_time_ms: 25.0
    classification_time_ms: 15.0
    addressing_time_ms: 5.0
    cache_hit_rate: 0.85
    success_rate: 0.95

# Caching configuration
caching:
  # Extraction result caching
  extraction_cache:
    enabled: true
    max_entries: 10000
    ttl_seconds: 3600                   # 1 hour
    eviction_policy: "lru"
    cache_negative_results: false
    
  # Intermediate result caching
  intermediate_cache:
    orientation_fields: true
    ridge_maps: true
    quality_assessments: true
    pattern_classifications: true
    max_size_mb: 500
    
  # Model caching
  model_cache:
    neural_models: true
    classification_models: true
    preprocessing_kernels: true

# Machine learning integration
machine_learning:
  # Neural network enhancement
  neural_enhancement:
    enabled: "${ML_ENHANCEMENT:false}"
    model_path: "models/"
    
    # Available models
    models:
      pattern_classifier:
        enabled: false
        model_file: "pattern_classifier.onnx"
        input_size: [224, 224]
        confidence_threshold: 0.8
        
      quality_assessor:
        enabled: false
        model_file: "quality_assessor.onnx"
        output_range: [0, 100]
        
      minutiae_detector:
        enabled: false
        model_file: "minutiae_detector.onnx"
        nms_threshold: 0.3
        
  # Learning and adaptation
  adaptive_learning:
    enabled: false
    learning_rate: 0.001
    update_frequency: 1000              # Updates after N processed images
    performance_feedback: true

# Environment-specific configurations
environments:
  development:
    fingerprint_processing:
      optimization_mode: "speed"
      core:
        target_extraction_time_ms: 50.0  # Relaxed timing for development
        quality_threshold: 40.0           # Lower quality threshold
        confidence_threshold: 0.6         # Lower confidence threshold
    image_preprocessing:
      enhancement:
        gaussian_blur:
          enabled: false                  # Faster processing
    caching:
      extraction_cache:
        max_entries: 1000                 # Smaller cache for development
        ttl_seconds: 600                  # Shorter TTL
    performance_monitoring:
      timing:
        enabled: false                    # Disable detailed timing
      benchmarking:
        enabled: false
        
  staging:
    fingerprint_processing:
      optimization_mode: "balanced"
    performance_monitoring:
      timing:
        enabled: true
      benchmarking:
        enabled: true
        iterations_per_test: 50           # Fewer iterations for staging
    caching:
      extraction_cache:
        max_entries: 5000
        ttl_seconds: 1800
        
  production:
    fingerprint_processing:
      optimization_mode: "balanced"      # Can override with env var
      core:
        target_extraction_time_ms: 20.0  # Strict production timing
        quality_threshold: 70.0          # Higher quality requirement
        confidence_threshold: 0.8        # Higher confidence requirement
    image_preprocessing:
      enhancement:
        gaussian_blur:
          enabled: true
        noise_reduction:
          enabled: true                   # Full enhancement in production
    quality_assessment:
      regional:
        enabled: true
        min_acceptable_regions: 14        # Stricter regional requirements
    caching:
      extraction_cache:
        enabled: true
        max_entries: 50000               # Large cache for production
        ttl_seconds: 7200                # Longer TTL for production
    performance_monitoring:
      timing:
        enabled: true
        track_component_times: true
      benchmarking:
        enabled: true
        iterations_per_test: 200
    machine_learning:
      neural_enhancement:
        enabled: false                    # Disable ML for consistent O(1) timing

# Integration settings
integrations:
  # Database integration
  database:
    characteristic_validation: true      # Validate before database insertion
    address_verification: true          # Verify addresses before storage
    batch_processing_size: 1000         # Records per batch
    
  # External services
  external_services:
    quality_service:
      enabled: "${EXTERNAL_QUALITY:false}"
      endpoint: "${QUALITY_SERVICE_URL:}"
      timeout_ms: 5000
      
    pattern_service:
      enabled: "${EXTERNAL_PATTERN:false}"
      endpoint: "${PATTERN_SERVICE_URL:}"
      timeout_ms: 3000

# Feature flags
features:
  # Core features
  pattern_classification: true
  ridge_analysis: true
  minutiae_detection: true
  quality_assessment: true
  address_generation: true
  
  # Advanced features
  neural_enhancement: "${NEURAL_FEATURES:false}"
  adaptive_thresholds: "${ADAPTIVE_THRESH:false}"
  real_time_optimization: "${REALTIME_OPT:false}"
  
  # Experimental features
  quantum_processing: "${QUANTUM_PROC:false}"
  bio_inspired_algorithms: "${BIO_ALGORITHMS:false}"
  multi_spectral_analysis: "${MULTI_SPECTRAL:false}"

# System limits and constraints
limits:
  # Processing limits
  max_image_size: [2048, 2048]          # Maximum input image size
  max_processing_time_ms: 100           # Hard limit on processing time
  max_memory_usage_mb: 512              # Maximum memory per fingerprint
  
  # Feature limits
  max_minutiae_per_fingerprint: 300
  max_similarity_addresses: 100
  max_cached_extractions: 100000
  
  # Quality limits
  min_image_size: [200, 200]            # Minimum viable image size
  max_noise_level: 0.3                  # Maximum acceptable noise
  min_ridge_clarity: 0.2                # Minimum ridge definition

# Logging and debugging
logging:
  # Processing logs
  processing_logs:
    enabled: true
    level: "INFO"                       # DEBUG, INFO, WARNING, ERROR
    include_timings: true
    include_characteristics: false      # Privacy consideration
    
  # Error handling
  error_handling:
    log_extraction_failures: true
    log_classification_failures: true
    log_addressing_failures: true
    include_stack_traces: false         # Production safety
    
  # Performance logs
  performance_logs:
    enabled: true
    log_slow_extractions: true
    slow_threshold_ms: 50.0
    log_quality_issues: true
    log_addressing_issues: true

# Validation and testing
validation:
  # Input validation
  input_validation:
    check_file_existence: true
    validate_image_format: true
    check_image_corruption: true
    verify_minimum_quality: true
    
  # Output validation
  output_validation:
    validate_characteristics: true
    check_address_format: true
    verify_address_uniqueness: true
    validate_similarity_addresses: true
    
  # Test data
  test_data:
    validation_dataset: "data/validation_set/"
    benchmark_dataset: "data/benchmark_set/"
    quality_reference: "data/quality_standards/"
